- name: Add ArgoCD repo to Helm
  command: helm repo add argo https://argoproj.github.io/argo-helm
  register: add_argocd_repo
  ignore_errors: true

- name: Update Helm repositories
  command: helm repo update
  register: update_helm_repos
  ignore_errors: true

- name: Check for existing ArgoCD CRDs
  command: kubectl get crd applicationsets.argoproj.io appprojects.argoproj.io -o json
  register: check_crd
  ignore_errors: true

- name: Delete existing applicationsets.argoproj.io CRD if it exists
  command: kubectl delete crd applicationsets.argoproj.io
  when: "'applicationsets.argoproj.io' in check_crd.stdout"
  ignore_errors: true

- name: Delete existing appprojects.argoproj.io CRD if it exists
  command: kubectl delete crd appprojects.argoproj.io
  when: "'appprojects.argoproj.io' in check_crd.stdout"
  ignore_errors: true

- name: Install ArgoCD using Helm
  community.kubernetes.helm:
    name: argocd
    chart_ref: argo/argo-cd
    release_namespace: argocd
    create_namespace: true
    wait: yes

- name: Patch ArgoCD service to use LoadBalancer type
  kubernetes.core.k8s:
    state: present
    namespace: argocd
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: argocd-server
        namespace: argocd
      spec:
        type: LoadBalancer
        ports:
          - port: 80
            targetPort: 8080

- name: Wait for LoadBalancer IP
  kubernetes.core.k8s_info:
    kind: Service
    namespace: argocd
    name: argocd-server
  register: lb_info
  retries: 10
  delay: 30
  until: lb_info.resources[0].status.loadBalancer.ingress is defined

- name: Print ArgoCD URL
  debug:
    msg: "ArgoCD is accessible at http://{{ lb_info.resources[0].status.loadBalancer.ingress[0].hostname }}"

- name: Get ArgoCD initial password
  shell: kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d && echo
  register: argocd_password

- name: Print ArgoCD initial password
  debug:
    msg: "ArgoCD initial password is: {{ argocd_password.stdout }}"

- name: Create ArgoCD Application
  kubernetes.core.k8s:
    state: present
    namespace: argocd
    definition:
      apiVersion: argoproj.io/v1alpha1
      kind: Application
      metadata:
        name: java-argo-application
        namespace: argocd
      spec:
        project: default
        source:
          repoURL: https://github.com/AliKhamed/ArgoCD_k8s_manifest_files.git
          targetRevision: HEAD
          path: dev
        destination:
          server: https://kubernetes.default.svc
          namespace: myapp
        syncPolicy:
          syncOptions:
            - CreateNamespace=true
          automated:
            selfHeal: true
            prune: true

