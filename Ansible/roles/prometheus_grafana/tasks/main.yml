- name: Add Prometheus community Helm repository
  command: helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
  register: helm_repo_add
  changed_when: "'repository' in helm_repo_add.stdout"

- name: Update Helm repositories
  command: helm repo update
  when: helm_repo_add is succeeded

- name: Create Prometheus namespace
  command: kubectl create namespace prometheus
  register: kubectl_create_ns
  changed_when: "'created' in kubectl_create_ns.stdout"
  failed_when: kubectl_create_ns.rc != 0 and 'already exists' not in kubectl_create_ns.stdout

- name: Install Prometheus
  command: >
    helm install prometheus prometheus-community/prometheus
    --namespace prometheus
    --set alertmanager.persistentVolume.storageClass="gp2"
    --set server.persistentVolume.storageClass="gp2"
    --set service.type=LoadBalancer
  when: kubectl_create_ns is succeeded

- name: Associate IAM OIDC provider with EKS cluster
  command: eksctl utils associate-iam-oidc-provider --cluster {{ eks_cluster_name }} --approve

- name: Create IAM service account for EBS CSI controller
  command: >
    eksctl create iamserviceaccount
    --name ebs-csi-controller-sa
    --namespace kube-system
    --cluster {{ eks_cluster_name }}
    --role-name AmazonEKS_EBS_CSI_DriverRole  
    --role-only
    --attach-policy-arn arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy
    --approve

- name: Create EBS CSI driver addon
  command: >
    eksctl create addon --name aws-ebs-csi-driver --cluster {{ eks_cluster_name }}
    --service-account-role-arn arn:aws:iam::{{ account_id }}:role/AmazonEKS_EBS_CSI_DriverRole
    --force

- name: Add Grafana Helm repository
  command: helm repo add grafana https://grafana.github.io/helm-charts
  register: grafana_repo_add
  changed_when: "'repository' in grafana_repo_add.stdout"

- name: Update Helm repositories for Grafana
  command: helm repo update
  when: grafana_repo_add is succeeded

- name: Create Grafana namespace
  command: kubectl create namespace grafana
  register: grafana_create_ns
  changed_when: "'created' in grafana_create_ns.stdout"
  failed_when: grafana_create_ns.rc != 0 and 'already exists' not in grafana_create_ns.stdout

- name: Install Grafana using Helm
  become: true
  helm:
    name: grafana
    chart_ref: grafana/grafana
    version: "5.0.4"  
    namespace: grafana
    values_files:
      - prom-data-source.yaml
    set_values:
      persistence.storageClassName: "gp2"
      persistence.enabled: true
      adminPassword: "Password123@"
      service.type: LoadBalancer
  when: grafana_create_ns is succeeded  
